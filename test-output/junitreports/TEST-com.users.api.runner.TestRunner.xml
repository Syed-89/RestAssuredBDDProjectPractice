<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="SD" failures="4" tests="8" name="com.users.api.runner.TestRunner" time="10.151" errors="2" timestamp="2023-10-25T13:01:36 PDT" skipped="0">
  <testcase classname="com.users.api.runner.TestRunner" name="runScenario" time="1.122"/>
  <system-out/>
  <testcase classname="com.users.api.runner.TestRunner" name="runScenario" time="0.896">
    <error message="Cannot parse object because no supported Content-Type was specified in response. Content-Type was &#039;text/html; charset=utf-8&#039;." type="java.lang.IllegalStateException">
      <![CDATA[java.lang.IllegalStateException: Cannot parse object because no supported Content-Type was specified in response. Content-Type was 'text/html; charset=utf-8'.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:95)
at io.restassured.internal.mapping.ObjectMapping$deserialize.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:46)
at io.restassured.internal.mapping.ObjectMapping$deserialize.call(Unknown Source)
at io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:231)
at io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)
at com.users.api.stepdefinitions.TestPostUsers.add_a_new_user(TestPostUsers.java:25)
at ✽.add a new user 29 and fname "Peter" and lname "Albert" and email "albert@gmail.com" and street "St 23 Texas"(file:///C:/Users/Syed%20Danish/eclipse-workspace/RestAssuredBDDProjectPractice/src/test/resources/com/users/api/features/PostUser.feature:4)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase classname="com.users.api.runner.TestRunner" name="runScenario" time="0.565">
    <error message="Cannot parse object because no supported Content-Type was specified in response. Content-Type was &#039;text/html; charset=utf-8&#039;." type="java.lang.IllegalStateException">
      <![CDATA[java.lang.IllegalStateException: Cannot parse object because no supported Content-Type was specified in response. Content-Type was 'text/html; charset=utf-8'.
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:95)
at io.restassured.internal.mapping.ObjectMapping$deserialize.call(Unknown Source)
at io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:231)
at io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)
at com.users.api.stepdefinitions.TestPostUsers.add_a_new_user(TestPostUsers.java:25)
at ✽.add a new user 30 and fname "Bardon" and lname "Watson" and email "watson@gmail.com" and street "St 23 Texas"(file:///C:/Users/Syed%20Danish/eclipse-workspace/RestAssuredBDDProjectPractice/src/test/resources/com/users/api/features/PostUser.feature:4)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase classname="com.users.api.runner.TestRunner" name="runScenario" time="1.851"/>
  <system-out/>
  <testcase classname="com.users.api.runner.TestRunner" name="runScenario" time="2.608">
    <failure message="expected [200] but found [404]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.users.api.stepdefinitions.TestDeleteUsers.verify_the_status_code(TestDeleteUsers.java:28)
at ✽.verify the status code 200(file:///C:/Users/Syed%20Danish/eclipse-workspace/RestAssuredBDDProjectPractice/src/test/resources/com/users/api/features/Delete.feature:5)
]]>
    </failure>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase classname="com.users.api.runner.TestRunner" name="runScenario" time="1.977">
    <failure message="expected [Andrew] but found [No such user found]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [Andrew] but found [No such user found]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.users.api.stepdefinitions.TestGetUsers.the_user_firstname_should_be_of_userId(TestGetUsers.java:54)
at ✽.the user firstname should be "Andrew" of userId 5(file:///C:/Users/Syed%20Danish/eclipse-workspace/RestAssuredBDDProjectPractice/src/test/resources/com/users/api/features/GetUser.feature:6)
]]>
    </failure>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase classname="com.users.api.runner.TestRunner" name="runScenario" time="0.571">
    <failure message="lists don&#039;t have the same size expected [2] but found [5]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: lists don't have the same size expected [2] but found [5]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:1089)
at org.testng.Assert.assertEquals(Assert.java:1065)
at com.users.api.stepdefinitions.TestGetUsers.the_user_details(TestGetUsers.java:125)
at ✽.the user details should 29 and fname "Peter" and lname "Albert" and email "albert@gmail.com" and street "St 23 Texas"(file:///C:/Users/Syed%20Danish/eclipse-workspace/RestAssuredBDDProjectPractice/src/test/resources/com/users/api/features/GetUser.feature:22)
]]>
    </failure>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase classname="com.users.api.runner.TestRunner" name="runScenario" time="0.561">
    <failure message="expected [sandra@gmail.com] but found [No such email found]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [sandra@gmail.com] but found [No such email found]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.users.api.stepdefinitions.TestGetUsers.email_address_should_of_the_user_id(TestGetUsers.java:93)
at ✽.email address should "sandra@gmail.com" of the userID 3(file:///C:/Users/Syed%20Danish/eclipse-workspace/RestAssuredBDDProjectPractice/src/test/resources/com/users/api/features/GetUser.feature:14)
]]>
    </failure>
  </testcase> <!-- runScenario -->
  <system-out/>
</testsuite> <!-- com.users.api.runner.TestRunner -->
